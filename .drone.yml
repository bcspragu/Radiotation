kind: pipeline
name: default

steps:
- name: backend
  image: golang:1.11
  commands:
    - GOCACHE=/go/pkg/mod/go-build GOOS=linux go build -ldflags '-extldflags "-static" -s -w' -o cmd/server/server github.com/bcspragu/Radiotation/cmd/server
    - GOCACHE=/go/pkg/mod/go-build GOOS=linux go build -ldflags '-extldflags "-static" -s -w' -o cmd/goose/goose github.com/bcspragu/Radiotation/cmd/goose
    - GOCACHE=/go/pkg/mod/go-build go test ./...
  volumes:
    - name: gocache
      path: /go/pkg/mod
- name:  frontend
  image: docker.bsprague.com/node
  commands:
    - cd frontend
    - yarn
    - yarn build
  volumes:
    - name: nodecache
      path: /drone/src/frontend/node_modules
- name: docker
  image: plugins/docker
  settings:
    repo: docker.bsprague.com/radiotation
    registry: docker.bsprague.com
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    dockerfile: Dockerfile
- name: scp
  image: appleboy/drone-scp
  settings:
    host: prod.bsprague.com
    username:
      from_secret: ssh_username
    key:
      from_secret: ssh_key
    target: /var/www/radiotation.com
    source: frontend/dist/*
    rm: true
    strip_components: 2
- name: ssh
  image: appleboy/drone-ssh
  settings:
    host: prod.bsprague.com
    username:
      from_secret: ssh_username
    key:
      from_secret: ssh_key
    script:
      - sudo systemctl restart radiotation.service

volumes:
- name: gocache
  host:
    path: /tmp/gocache
- name: nodecache
  host:
    path: /tmp/nodecache

branches: master
